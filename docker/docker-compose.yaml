# This Docker Compose file is the main configuration for the GISNav project.
# It defines the volumes, networks, and services required to run the GISNav system.
# Each service is either pulled from an upstream registry or built from a specified #
# context. Environment variables configured as necessary.

name: gisnav

# Define volumes for storing persistent data and configuration files.
volumes:
  maps-volume:
  gscam-volume:
  gisnav-volume:
  pgdata-volume:

# Define networks for segregating services based on their functionality.
networks:
  gis:
    driver: bridge
    attachable: true
  mavlink:
    driver: bridge
    attachable: true
  admin:
    driver: bridge
    attachable: true
  dds:
    driver: bridge
    attachable: true

# Define services with their upstream images and potential build contexts
services:
  mapserver:
    build:
      context: apache
      target: mapserver
      args:
        TINYOWS_MAPFILE: ${TINYOWS_MAPFILE:?empty or not set}

  mavros:
    build:
      context: mavros
      target: mavros

  micro-ros-agent:
    build:
      context: micro-ros-agent

  qgc:
    build:
      context: qgc
      args:
        USERNAME: ${USER:?empty or not set}
    privileged: true  # TODO: remove this flag?

  # Note: build context is repository root
  # Note 2: The "docker buildx build" command in the push_gisnav_images.yml workflow
  #  duplicates these build arguments. They should be changed together.
  # Socat is used to bridge the output serial port to the PX4 SITL container
  # over TCP - mapping serial ports to Docker host serial ports would be
  # a bit more messy. For production deployments the socat command is expected
  # to be left out.
  gisnav:
    #image: "ghcr.io/hmakelin/gisnav:${TAG:-latest}"
    image: "${GISNAV_DOCKER_REGISTRY_HOST:?err}:${GISNAV_DOCKER_REGISTRY_PORT:?err}/${GISNAV_DOCKER_REGISTRY_NAMESPACE}/gisnav"
    build:
      context: ..
      dockerfile: docker/mavros/Dockerfile
      target: gisnav

  # The px4 service depends on mavros, mapserver and micro-ros-agent because
  # their IP addresses are used in the px4 service entrypoint.sh script
  px4:
    build:
      context: px4

  # TODO: ardupilot service has been unmaintained for a while - does not work
  ardupilot:
    build:
      context: ardupilot
    privileged: True

  rviz:
    build:
      context: rviz

  gscam:
    build:
      context: gscam

  autoheal:
    image: willfarrell/autoheal
    restart: always
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
      AUTOHEAL_INTERVAL: 10
      AUTOHEAL_START_PERIOD: 30
      AUTOHEAL_DEFAULT_STOP_TIMEOUT: 10

  postgres:
    build:
      context: postgres
    environment:
      GISNAV_DB: gisnav
      POSTGRES_USER: gisnav
      POSTGRES_PASSWORD: gisnav

  fileserver:
    build:
      context: apache
      target: fileserver

  homepage:
    build:
      context: homepage

  monitoring:
    image: nicolargo/glances:latest-full
    pid: host

  nginx:
    build:
      context: nginx
    #image: nginx:latest
    #container_name: nginx
