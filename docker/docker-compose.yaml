version: "3.4"

services:
  mapserver:
    build:
      context: mapserver
      dockerfile: Dockerfile
      args:
        - DOCKER_TAG=latest
    network_mode: host
    command: /usr/local/bin/start-server

  mapproxy:
    build:
      context: mapproxy
      dockerfile: Dockerfile
      args:
        - MAPPROXY_TILE_URL="https://<your-map-server-url>/tiles/%(z)s/%(y)s/%(x)s"
        - CONFIG_FILE=yaml/mapproxy.yaml
        - HOST=localhost
        - PORT=80
    network_mode: host
    command: mapproxy-util serve-develop -b $HOST:$PORT $HOME/$(basename $CONFIG_FILE)

  micro-ros-agent:
    build:
      context: micro-ros-agent
      dockerfile: Dockerfile
    network_mode: host
    environment:
      - ROS_DOMAIN_ID=0
      - FASTRTPS_DEFAULT_PROFILES_FILE=/disable_shared_memory.xml
    volumes:
      - /dev/shm:/dev/shm
    command: udp4 -p 8888

  mavros:
    build:
      context: mavros
      dockerfile: Dockerfile
    environment:
      - ROS_DOMAIN_ID=0
      - FASTRTPS_DEFAULT_PROFILES_FILE=/disable_shared_memory.xml
    network_mode: host
    volumes:
      - /dev/shm:/dev/shm
    command: ros2 run mavros mavros_node --ros-args --param fcu_url:=udp-b://localhost:14551@14555

  qgc:
    build:
      context: qgc
      dockerfile: Dockerfile
    env_file:
      - .env/.x11.env
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - /dev/shm:/dev/shm
      - /dev/dri:/dev/dri
    network_mode: host
    privileged: true

  # Note: build context is repository root
  gisnav:
    build:
      context: ..
      dockerfile: docker/gisnav/Dockerfile
    image: gisnav  # used by GitHub upload_gisnav_image CI workflow
    env_file:
      - .env/.x11.env
    environment:
      - FASTRTPS_DEFAULT_PROFILES_FILE=/opt/colcon_ws/src/gisnav/docker/gisnav/disable_shared_memory.xml
    volumes:
      - /dev/dri:/dev/dri
    network_mode: host
    stdin_open: true
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    command: ros2 launch gisnav base.launch.py

  px4:
    build:
      context: px4
      dockerfile: Dockerfile
    env_file:
      - .env/.x11.env
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - /dev/shm:/dev/shm
      - /dev/dri:/dev/dri
    network_mode: host
    stdin_open: true
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  ardupilot:
    build:
      context: ardupilot
      dockerfile: Dockerfile
    env_file:
      - .env/.x11.env
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      - /dev/shm:/dev/shm
      - /dev/dri:/dev/dri
    network_mode: host
    privileged: True
    stdin_open: true
    tty: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    command: bash -c "cd ~ && make sim_vehicle"

  torch-serve:
    build:
      context: torch-serve
      dockerfile: Dockerfile
      args:
        - BASE_IMAGE=pytorch/torchserve:latest-gpu
    network_mode: host
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
