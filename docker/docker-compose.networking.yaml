# This Docker Compose file is part of the GISNav project configuration.
# It defines various services, their network associations, and port mappings
# to facilitate communication and functionality within the GISNav system. The
# port mappings here expose specific services to communication from both the
# local and any number of remote hosts.

name: gisnav

services:
  mapserver:
    networks:
      - gis

  mavros:
    networks:
      - mavlink
    ports:
      - "14540:14540/udp"

  micro-ros-agent:
    networks:
      - mavlink
    ports:
      - "${UXRCE_DDS_PRT:?empty or not set}:${UXRCE_DDS_PRT:?empty or not set}/udp"

  qgc:
    networks:
      - mavlink

  # TODO: Consider using environment variables for FCU or simulation host computer hostname (i.e. where to send the outgoing comms during simulation).
  # TODO: Expose serial device instead of TCP port and output NMEA directly.
  gisnav:
    networks:
      - gis
    ports:
      # Expose TCP port for NMEA output
      - "15000:15000/tcp"

  # The px4 service simulates the PX4 flight control unit.
  # TODO: Consider using environment variables for companion computer hostname.
  px4:
    networks:
      - mavlink
    ports:
      # Expose TCP port for NMEA input
      - "15000:15000/tcp"
    environment:
      PX4_VIDEO_HOST_IP: ${PX4_VIDEO_HOST_IP:?empty or not set}
      UXRCE_DDS_PRT: ${UXRCE_DDS_PRT:?empty or not set}
      GISNAV_COMPANION_HOST: ${GISNAV_COMPANION_HOST:?empty or not set}

  # TODO: Define and expose necessary ports for ArduPilot.
  ardupilot:
    networks:
      - mavlink

  # TODO: Determine if gscam needs to be in the same network as px4 during simulation.
  gscam:

  qgis:
    networks:
      - gis

  postgres:
    networks:
      - gis

  fileserver:
    networks:
      - admin

  homepage:
    networks:
      - admin

  monitoring:
    networks:
      - admin

  nginx:
    networks:
      - admin
    ports:
      # Expose HTTP port
      - "80:80/tcp"
      # Expose HTTPS port
      - "443:443/tcp"
