#!/bin/bash

# Function to print usage
print_usage() {
    echo "Usage: gnc [sitl|hil] {<any docker compose command>|help}"
    echo ""
    echo "Deployment modes:"
    echo "  sitl            Software-in-the-loop. Default mode if not provided."
    echo "  hil             Hardware-in-the-loop. (Note: HIL mode is currently unsupported by 'gnc')."
    echo ""
    echo "Examples:"
    echo "  gnc start"
    echo "  gnc logs gisnav"
    echo "  GISNAV_COMPANION_HOST=raspberrypi.local gnc start"
    echo "  gnc hil start"
}

# Function to manage tasks
manage_tasks() {
    local deployment_mode=$1
    shift 1

    # Handle submode
    case "$deployment_mode" in
        sitl)
            ;;
        hil)
            echo "WARNING: HIL mode is unsupported."
            exit 1
            ;;
        *)
            echo "Unknown mode: $deployment_mode"
            print_usage
            exit 1
            ;;
    esac

    case "$1" in
        build)
            # Custom handling for building images on resource constrained
            # systems
            /usr/lib/gisnav/build.sh "$@"
            ;;
        create)
            # Custom handling for creating images to enable GUI apps
            /usr/lib/gisnav/create.sh "$@"
            ;;
        help)
            # alias for --help|-h
            /usr/lib/gisnav/compose.sh --help
            ;;
        *)
            # Default script
            /usr/lib/gisnav/compose.sh "$@"
            ;;
    esac
}

# Check if enough arguments are provided
if [ $# -lt 1 ]; then
    print_usage
    exit 1
fi

# Determine default for deployment mode if not provided
deployment_mode="sitl"
command=""

if [ "$1" == "sitl" ] || [ "$1" == "hil" ]; then
    deployment_mode=$1
    shift
fi

if [ -n "$1" ]; then
    command=$1
    shift
else
    print_usage
    exit 1
fi

# Manage tasks based on provided arguments
manage_tasks $deployment_mode $command "$@"
