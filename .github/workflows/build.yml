name: Build Sphinx Documentation

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows running manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    container: px4io/px4-dev-ros2-foxy
    defaults:
      run:
        shell: bash
    steps:
      - name: Install node
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs

      - name: Create colcon workspace
        run: mkdir -p colcon_ws/src

      - name: Setup PX4-ROS 2 bridge
        uses: actions/checkout@v3
        with:
          repository: PX4/px4_ros_com
          path: colcon_ws/src/px4_ros_com

      - name: Checkout PX4 messages
        uses: actions/checkout@v3
        with:
          repository: PX4/px4_msgs
          path: colcon_ws/src/px4_msgs

      - name: Install geographic_msgs and GeographicLib datasets
        run: |
          sudo apt-get install wget
          sudo apt-get install -y ros-foxy-mavros ros-foxy-mavros-extras
          wget https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh
          chmod +x install_geographiclib_datasets.sh
          ./install_geographiclib_datasets.sh
          sudo apt-get install -y ros-foxy-geographic-msgs

      - name: Checkout GISNav messages
        uses: actions/checkout@v3
        with:
          repository: hmakelin/gisnav_msgs
          path: colcon_ws/src/gisnav_msgs

      - name: Build colcon workspace
        run: |
          cd colcon_ws/src/px4_ros_com/scripts
          ./build_ros2_workspace.bash

      - name: Checkout GISNav
        uses: actions/checkout@v3
        with:
          path: colcon_ws/src/gisnav
          submodules: 'true'

      - name: Get LoFTR weights
        run: |
          pip install gdown
          cd colcon_ws/src/gisnav
          mkdir weights && cd "$_"
          gdown https://drive.google.com/uc?id=1M-VD35-qdB5Iw-AtbDBCKC7hPolFW9UY

      - name: Install GISNav
        run: |
          cd colcon_ws
          source /opt/ros/foxy/setup.bash
          rosdep update
          rosdep install --from-paths src --ignore-src -y --rosdistro=foxy
          cd src/gisnav
          git submodule update --init
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          cd ../..
          colcon build --packages-select gisnav gisnav_msgs

      - name: Run ROS 2 launch tests
        run: |
          cd colcon_ws
          sudo apt-get -y update
          sudo apt-get -y dist-upgrade
          source /opt/ros/foxy/setup.bash
          source install/setup.bash
          launch_test src/gisnav/test/launch/test_px4_launch.py
          launch_test src/gisnav/test/launch/test_ardupilot_launch.py

      - name: Build Sphinx docs
        run: |
          cd colcon_ws
          source /opt/ros/foxy/setup.bash
          source install/setup.bash
          export PATH=$(dirname $(find / -iname sphinx-build -print -quit)):$PATH
          cd src/gisnav/docs/ && make html
          cd _build/html && touch .nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v1

      - name: Make Upload Pages Artifact step work with containers
        run: |
          mkdir -p ${{runner.temp}}
          mkdir -p /__w/_temp
          ln -s ${{runner.temp}}/artifact.tar /__w/_temp/artifact.tar

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'colcon_ws/src/gisnav/docs/_build/html/'

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
