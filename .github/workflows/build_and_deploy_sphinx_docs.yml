name: Build and deploy Sphinx documentation

on:
  push:
    # Run when new version tag is pushed
    tags:
      - v*

  # Allows running manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-20.04
    container: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Install GISNav developer dependencies
        run: |
          cd ~/colcon_ws/src/gisnav
          python3 -m pip install -r requirements-dev.txt

      - name: Build Sphinx docs
        run: |
          cd ~/colcon_ws
          source /opt/ros/foxy/setup.bash
          source install/setup.bash
          cd src/gisnav
          export PATH=$(dirname $(find ~ -iname sphinx-build -print -quit)):$PATH
          make -C docs html
          cd docs/_build/html && touch .nojekyll

      - name: Install node
        run: |
          sudo apt-get update
          sudo apt-get -y install curl
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs

      - name: Setup pages
        uses: actions/configure-pages@v1

      - name: Make "Upload pages artifact" step work with containers
        run: |
          sudo mkdir -p ${{runner.temp}}
          sudo mkdir -p /__w/_temp
          sudo ln -s ${{runner.temp}}/artifact.tar /__w/_temp/artifact.tar

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '/home/gisnav/colcon_ws/src/gisnav/docs/_build/html/'

  deploy:
    needs: build

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
